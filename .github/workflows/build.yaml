name: Push-to-EC2

on:
  push:
    branches:
      - main
    paths:
      - 'server/**'  
  pull_request:
    branches:
      - main  # Trigger on pull requests to the main branch
    paths:
      - 'server/**'      # Runs when any file under the 'Server' directory changes

jobs:
  deploy:
    name: Deploy to EC2 on master branch push
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout the files
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install npm dependencies
        working-directory: server
        run: npm install

      - name: Run Build
        working-directory: server
        run: npm run build --if-present

      - name: Run Tests
        working-directory: server
        run: echo "npm run Test Scripts need to be Implememnted!"

      - name: Show Files
        run: ls server/

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Deploy to Server 1
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_KEY }}
          REMOTE_HOST: ${{ secrets.EC2_HOST }}
          REMOTE_USER: ${{ secrets.EC2_USER }}
          TARGET: ${{ secrets.TARGET_DIR }}
          SOURCE: "server/"
          EXCLUDE: "node_modules/,src/"

      - name: Executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ${{ secrets.TARGET_DIR }}
            npm install --omit=dev

            # Create or update the .env file
            echo "MONGO_URL=${{ secrets.MONGO_URL }}" > .env
            echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
            echo "JWT_TOKEN_EXPIRY=${{ secrets.JWT_TOKEN_EXPIRY }}" >> .env
            echo "SERVER_PORT=${{ secrets.SERVER_PORT }}" >> .env
            echo "NODE_ENV=prod" >> .env
            echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
            echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
            echo "CORS_ORIGINS=${{ secrets.CORS_ORIGINS }}" >> .env
            echo "APP_DOMAIN=${{ secrets.APP_DOMAIN }}" >> .env

            # Restart app using PM2 or start it if not running
            pm2 restart strix || pm2 start build/index.js --name strix

            # Save PM2 process list to restart on reboot
            pm2 save

            # Optional: Check status of the app
            pm2 status

            # Log deployment time
            echo "Deployment updated on $(date '+%Y-%m-%d %H:%M:%S') by ${{ github.actor }}" >> ci-info.txt
